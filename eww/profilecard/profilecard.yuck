;; Vars ;;

;; Fetch
(defpoll os :interval "24h" "../eww/profilecard/scripts/fetch os")
(defpoll wm :interval "24h" "../eww/profilecard/scripts/fetch wm")

;; Profile
(defvar IMAGEP "/home/krishna/Pictures/wallpaper/profile.png")
(defpoll username :interval "24h" "whoami")
(defpoll hostname :interval "24h" "cat /etc/hostname")
(defpoll uptime :interval "30s" "uptime -p | sed -E -e 's/hour(s)?/hrs/g' -e 's/minute(s)?/min/g'")

;; Pacman
(defpoll updates :interval "2m" "updates.sh --get-updates")
(defpoll packages :interval "1h" "pacman -Q | wc -l")

;; Weather
(defpoll weathericon :interval "15m" "weather.sh icon")
(defpoll weathercity :interval "15m" "weather.sh city")
(defpoll weathertemp :interval "15m" "weather.sh current_temp")
(defpoll weatherdesc :interval "15m" "weather.sh weather_desc")
(defpoll weatherhex :interval "15m" "weather.sh hex")

;; Networking
(defpoll net_status :interval "3s" "../eww/profilecard/scripts/Network --status")
(defpoll net_icon :interval "3s" "../eww/profilecard/scripts/Network --icon")

;; Temp
(defpoll temp :interval "5s" "../eww/profilecard/scripts/temp.sh")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Widegets ;;

(defwidget launchermenu []
     (box :class "launchermenu"
          :orientation "v"
          :space-evenly "false"
          :spacing 7
          (closebtn)
          (pfp)
          (infoarch)
          (weather)
          (system)
          (footer)
  ))

(defwidget closebtn []
  (box :orientation "h" :space-evenly "false" :halign "end"
    (eventbox :cursor "pointer"
      (button :class "min" :onclick "eww -c ~/.config/eww open --toggle launchermenu" "󰅙")
    )
  )
)


(defwidget pfp []
	(box :orientation "h"
		 :space-evenly "false"
		 :class "usercard"
		 (box :space-evenly "false"
			  :hexpand true
			  :orientation "h"
			  :spacing "15"
			  (box :style "background-image: url('${IMAGEP}');"
				   :class "face"
				   :halign "center")
			  (box :orientation "v"
				   :space-evenly "false"
				   :hexpand true
				   :valign "center"
				   (box :class "user-host"
						:halign "start"
						(label :text username))
			       (box :class "host"
						:halign "start"
						(label :text "@${hostname}"))
				   (box :class "uptime"
						:halign "start"
						(label :text uptime)))
			  (box :orientation "v"
				   :space-evenly "false"
				   :spacing 10
				   :valign "center"
				   :halign "start"
				   :hexpand false
				   (eventbox :cursor "pointer"
				   (button :class "btn-info" :tooltip "Lock Computer" :onclick "physlock -d" "󱅞"))
				   (eventbox :cursor "pointer"
				   (button :class "btn-info" :tooltip "Logout BSPWM" :onclick "bspc quit" "󰍃")))
		)
	)
)

(defwidget infoarch []
          (box :orientation "h"
	           :space-evenly "false"
	           :spacing 7
	           (box :orientation "v"
					:class "pacman"
					:hexpand true
					(label :halign "start"
						   :class "pacman-icon"
						   :text "󰮯")
					(box :space-evenly "false"
						 (eventbox :cursor "pointer"
						 (button :class "pacman-updates"
								 :halign "start"
								 :tooltip "Click to update"
								 :onclick "OpenApps --update" "${updates} Updates"))))
			   (box :orientation "h"
					:space-evenly "false"
					:class "fetch"
					:spacing 8
					(label :class "arch-icon"
						   :halign "start"
						   :text "󰣇 ")
					(box
						 :space-evenly "false"
						 (box :orientation "v"
							  :spacing 3
							  :halign "end"
							  :style "margin-left: 10px;"
							  (label :class "os-icon"
									 :halign "start"
									 :text "󰣇")
							  (label :class "pkgs-icon"
									 :halign "start"
									 :text "󰮯")
							  (label :class "wm-icon"
									 :halign "start"
									 :text "󱪳")))
					(box
						 :space-evenly "false"
						 (box :orientation "v"
							  :spacing 3
							  :halign "start"
							  (label :class "os-text"
									 :halign "start"
									 :text os)
							  (label :class "pkgs-text"
									 :halign "start"
									 :text packages)
							  (label :class "wm-text"
									 :halign "start"
									 :text wm))))))

(defwidget weather[]
  (box :orientation "h" :class "weatherboxfull" :space-evenly false
	(box :orientation "v" :class "weatherbox" :hexpand true :space-evenly false
      (box :orientation "h" :class "weathertop" :space-evenly false
        (box :class "weatherdesc" :style "color: ${weatherhex};" :halign "start" :hexpand true weatherdesc)
        (box :class "weathertemp" :halign "end" "${weathertemp}°C")
      )
      (box :orientation "v" :class "weatherbot" :space-evenly false
        (box :class "weathercity" :halign "start" :hexpand true
			 (label :limit-width 22 :text weathercity))
      )
    )
      (box :class "weathericon" :style "color: ${weatherhex};" :halign "center" weathericon)
  )
)

(defwidget system_progress [data icon css tip]
  (box  :class "progress"
    (circular-progress
      :class css
      :value data
      :thickness 6
      :tooltip tip
      (overlay
        :valign "center"
        (label
          :class "icon"
          :text icon
        )
      )
    )
  )
)

(defwidget cpu []
  (system_progress
    :css "cpu"
    :tip "CPU ${round(EWW_CPU.avg,0)}%"
    :data {round(EWW_CPU.avg, 0)}
    :icon ""
  )
)

(defwidget ram []
  (system_progress
    :css "ram"
    :tip "RAM ${round(EWW_RAM.used_mem / 1048576, 2)}MB"
    :data {round(EWW_RAM.used_mem_perc, 0)}
    :icon ""
  )
)

(defwidget disk []
  (system_progress
    :css "disk"
    :tip "SSD ${round(EWW_DISK["/"].used_perc, 2)}%"
    :data {round(EWW_DISK["/"].used_perc, 0)}
    :icon ""
  )
)


(defwidget system []
  (box
    :class "system"
    :spacing 8
    (cpu)
    (ram)
    (disk)
  )
)


(defwidget footer []
  (box :orientation "h" :space-evenly "false" :spacing 5

    (box :orientation "h"
      (label :class "temp" :text "")
      (label :class "info-btn" :text temp))

    ;;(box :orientation "h" :style "border: 1px solid green;"
    ;;(label :class "" :text "icon")
    ;;(label :class "" :text "42°"))

  )
)

;; Windows ;;

(defwindow launchermenu
    :geometry (geometry :x "80px" :y "0px" :anchor "left center")
    :wm-ignore false
    (launchermenu))
